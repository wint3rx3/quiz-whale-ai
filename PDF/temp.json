[
  {
    "page_number": 1,
    "content": "(plain text) The dominant sequence transduction models are based on complex recurrent or\nconvolutional neural networks that include an cncoder and\na decoder:\nThe best\nperforming models also connect the encoder and decoder through an attention\nmechanism_\nWe propose\na new\nsimple network architecture, the Transformer\nbased solely on attention mechanisms  dispensing with recurrence and convolutions\nentirely.\nExperiments on tWO machine translation tasks show these models to\nbe superior in quality while\nmore\nparallelizable and requiring significantly\nless time to train.\nOur model achieves 28.4 BLEU on the WMT 2014 English\nto-German translation task, improving over the existing best results, including\nensembles  by over 2 BLEU. On the WMT 2014 English-to-French translation task_\nour model establishes a new single-model state-of-the-art BLEU score of 41.0 after\ntraining for 3.5 days on eight GPUs a small fraction of the training costs of the\nbest models from the literature\nbeing \n(plain text) Equal contribution. Listing order is random. Jakob proposed replacing RNNs with self-attention and started\nthe effort to evaluate this idea\nAshish, with Illia, designed and implemented the first Transformer models and\nhas been crucially involved in\naspect of this work. Noam proposed scaled dot-product attention multi-head\nattention and the parameter-free position representation and became the other person involved in nearly\ndetail.\nNiki designed implemented, tuned and evaluated countless model variants in our original codebase and\ntensor2tensor: Llion also experimented with novel model variants, was responsible for our initial codebase and\nefficient inference and visualizations. Lukasz and Aidan spent countless\ndesigning various parts of and\nimplementing tensor2tensor; replacing our earlier codebase, greatly improving results and massively accelerating\nour research\nevery\nevery\nlong\ndays\n(plain text) Recurrent neural networks,\nshort-term memory\n12\nand gated recurrent\nneural networks\nin particular have been firmly established as state of the art approaches in sequence modeling and\ntransduction problems such as language modeling and machine translation\n'29,125|\nNumerous\nefforts have since continued to\nthe boundaries of recurrent\nlanguage models and encoder-decoder\narchitectures\n31/121I13 \nlong\npush\n(title) Abstract\n(title) Attention Is All You Need\n(title) Introduction\n(plain text) Noam Shazeer*\nGoogle Brain\nnoam@googie\ncom\n(plain text) Aidan N. Gomez*\nUniversity of Toronto\naidan@cs\ntoronto\nedu\n(plain text) Niki Parmar\nGoogle Research\nnikip@google\ncom\n(plain text) Jakob Uszkoreit\nGoogle Research\nusz@googie\ncom\n(plain text) Llion Jones *\nGoogle Research\n11ion@googie\ncom\n(plain text) Illia Polosukhin\n1111a . polosukhin@gmai1 \ncom\n(plain text) Ashish Vaswani\nGoogle Brain\navaswani@googie\ncom\n(plain text) Work performed while at Google Brain\n(plain text) Work performed while at Google Research\n(plain text) Lukasz Kaiser*\nGoogle Brain\n1ukaszkaiser@googie\ncom\n(plain text) 31st Conference on Neural Information Processing Systems (NIPS 2017) Long Beach, CA\nUSA\n(plain text) 31st Conference on Neural Information Processing Systems (NIPS 2017), Long Beach CA USA"
  },
  {
    "page_number": 2,
    "content": "(plain text) Recurrent models typically factor computation along the symbol positions of the input and output\nsequences. Aligning the positions to steps in computation time,\ngenerate\na scquence of hidden\nstates ht, as a function of the previous hidden state h-1 and the input for position t\nThis inherently\nscquential nature precludes parallelization within training examples, which becomes critical at longer\nsequence lengths,\nas memory constraints limit batching across examples. Recent work has achieved\nsignificant improvements in computational efficiency through factorization tricks [ 18] and conditional\ncomputation [26]\nwhile also improving model performance in case of the latter: The fundamental\nconstraint of sequential computation, however; remains.\nthey\n(plain text) The\nof reducing sequential computation also forms the foundation of the Extended Neural GPU\n[20\nByteNet [15I and Convs2s [81\nall of which use convolutional neural networks as basic building\nblock, computing hidden representations in parallel for all input and output positions. In these models_\nthe number of operations required to relate signals from tWO arbitrary input or output positions grows\nin the distance between positions  linearly for ConvS2S and logarithmically for ByteNet. This makes\nit more difficult to lcarn dependencies between distant positions\nIn the Transformer this is\nreduced to a constant number of operations, albeit at the cost of reduced effective resolution due\nt0 averaging attention-weighted positions, an effect we counteract with Multi-Head Attention as\ndescribed in sectionB32\ngoal\n(plain text) In this work\nwe propose the Transformer;\nmodel architecture eschewing recurrence and instead\nrelying entirely on an attention mechanism to draw global dependencies between input and output\nThe Transformer allows for\nsignificantly more parallelization and can reach a new state Of the art in\ntranslation quality after being trained for as little as twelve hours on eight P1OO GPUs.\n(plain text) Most competitive neural sequence transduction models have an encoder-decoder structure [5/2.29]\nHere, the encoder maps an input sequence of symbol representations (ê³ 1,\nHn\nto\na sequence\nof continuous rcpresentations\n=\n(21;\nZn\nGiven\nZ, the decoder then generates an output\nsequence (y1;\nYrn\nof symbols one clement at a time. At each step the model is auto-regressive\n9]; consuming the previously generated symbols as additional input when generating the next\n(plain text) Attention mechanisms have become an integral part of compelling sequence modeling and transduc\ntion models in various tasks, allowing modeling of dependencies without regard to their distance in\nthe input or output sequences [2/16]\nIn all but a few cases [22\nhowever; such attention mechanisms\nare used in conjunction with a recurrent network.\n(plain text) Self-attention  sometimes called intra-attention is an attention mechanism relating different positions\nof a single sequence in order to compute a representation of the sequence. Self-attention has been\nuscd successfully in a variety of tasks including reading comprehension, abstractive summarization\ntextual entailment and learning task-independent sentence representations\n4,22,I23I19]\n(plain text) End-to-end memory networks are based on\na recurrent attention mechanism instead of sequence\naligned recurrence and have been shown to perform well on simple-language question answering and\nlanguage modeling tasks\n28\n(plain text) The Transformer follows this overall architecture using stacked self-attention and point-wise, fully\nconnected layers for both the encoder and decoder; shown in the left and right halves of Figure[\nrespectively.\n(plain text) Encoder:\nThe encoder is composed of a stack of N\n6 identical layers.\nEach layer has twO\nsub-layers\nThe first is a multi-head self-attention mechanism and the second is\nsimple, position-\n(plain text) To the best of our knowledge, however; the Transformer is the first transduction model relying\nentirely on self-attention to compute representations of its input and output without\nsequence\naligned RNNs or convolution\nIn the\nfollowing sections, we will describe the Transformer; motivate\nself-attention and discuss its advantages over models such as [14[15] and [8]\nusing\n(title) 3\nModel Architecture\n(title) 2\nBackground\n(title) 3.1\nEncoder and Decoder Stacks"
  },
  {
    "page_number": 3,
    "content": "(plain text) wise fully connected feed-forward network.\nWe employ\na residual connection [I0\naround each of\nthe tWO\nsub-layers, followed by layer normalization\nI].\nThat is, the output of each\nsub-layer is\nLayerNorm (z +\nSublayer(z)); where Sublayer(z) is the function implemented by the sub-layer\nitself. To facilitate these residual connections, all sub-layers in the model,\nas well as the\nembedding\nlayers, produce outputs of dimension\n512.\n(model\n(figure) a diagram of the algorithm\n(plain text) Decoder:\nThe decoder is also composed ofa stack of N\n6 identical layers\nIn addition to the two\nsub-layers in each encoder layer; the decoder inserts\nthird sub-layer; which performs multi-head\nattention over the output of the encoder stack. Similar to the encoder; we employ residual connections\naround cach of the sub-layers, followed by\nnormalization\nWe also modify the self-attention\nsub-layer in the decoder stack to prevent positions from attending to subsequent positions.\nThis\nmasking combined with fact that the output\nembeddings\nare offset by one position ensures that the\npredictions for position i can depend only on the known outputs at positions less than i.\nlayer\n(plain text) An attention function can be described as mapping a query and a set of key-value\nto an output\nwhere the query keys, values_\nand output are all vectors\nThe output is computed as a weighted sum\nof the values, where the weight assigned to each value is computed by a compatibility function of the\nquery with the corresponding key.\npairs\n(plain text) We call our\nparticular attention \"Scaled Dot-Product Attention-\n(FigureEzj:\nThe input consists of\nqueries and keys of dimension dk, and values of dimension d\nWe compute the dot products of the\n(title) 3.2.1\nScaled Dot-Product Attention\n(title) 3.2\nAttention"
  }
]